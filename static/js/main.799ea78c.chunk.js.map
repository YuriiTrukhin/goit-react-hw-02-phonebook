{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["INITIAL_STATE","name","number","id","ContactForm","state","handleChange","target","setState","uuid4","value","handleSubmit","event","preventDefault","props","addContact","this","action","onSubmit","htmlFor","type","placeholder","onChange","Component","ContactList","console","log","list","Filter","filterRender","filter","e","contactList","App","contacts","toAddContact","el","prev","updateState","filterTask","contact","toLowerCase","includes","filterText","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAGMA,EAAgB,CACpBC,KAAM,GACNC,OAAQ,GACRC,GAAI,IAEeC,E,4MACnBC,M,eAAaL,G,EAEbM,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OAChB,EAAKC,SAAL,aACEL,GAAIM,eACHF,EAAON,KAAOM,EAAOG,S,EAG1BC,aAAe,SAACC,GACdA,EAAMC,iBACW,EAAKR,MAAdJ,KAER,EAAKa,MAAMC,WAAX,eAA2B,EAAKV,S,uDAGxB,IAAD,EACkBW,KAAKX,MAAtBJ,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,8BACE,uBAAMe,OAAO,GAAGC,SAAUF,KAAKL,aAA/B,UACE,uBAAOQ,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOnB,KAAK,OAAOS,MAAOT,EAAMoB,YAAY,OAAOC,SAAUN,KAAKV,eAE9E,uBAAOa,QAAQ,SAAf,qBACA,uBAAOC,KAAK,MAAMnB,KAAK,SAASS,MAAOR,EAAQmB,YAAY,SAASC,SAAUN,KAAKV,eAEnF,uBAAOc,KAAK,SAASV,MAAM,yB,GA3BIa,aCLpBC,E,uKAMjB,OADAC,QAAQC,IAAIV,KAAKF,MAAMa,MAErB,mCACE,+BACGX,KAAKF,MAAMa,KAAK1B,KADnB,IAC0Be,KAAKF,MAAMa,KAAKzB,gB,GATTqB,aCO1BK,EARA,YAAqC,IAAzBC,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,OACvC,OACE,gCACE,0DACA,uBAAOV,KAAK,OAAOV,MAAOoB,EAAQR,SAAU,SAACS,GAAD,OAAOF,EAAaE,EAAExB,OAAOG,cCDzEsB,EAAc,GACCC,E,4MAInB5B,MAAQ,CACN6B,SAAS,GAAD,OAAMF,GACdF,OAAQ,I,EAEVK,aAAe,SAACC,GACd,EAAK5B,UAAS,SAAC6B,GACb,IAAMC,EAAW,sBAAOD,EAAKH,UAAZ,CAAsBE,IAEvC,OADAX,QAAQC,IAAI,CAAEQ,SAAUI,IACjB,CAAEJ,SAAUI,O,EAGvBT,aAAe,SAACC,GACd,EAAKtB,SAAS,CAAEsB,Y,EAElBS,WAAa,WAAO,IAAD,EACY,EAAKlC,MAA1B6B,EADS,EACTA,SAAUJ,EADD,EACCA,OAClB,OAAOI,EAASJ,QAAO,SAACU,GACtB,OAAOA,EAAQvC,KAAKwC,cAAcC,SAASZ,EAAOW,mB,uDAG5C,IAAD,EACsBzB,KAAKX,MAA1B6B,EADD,EACCA,SAAUJ,EADX,EACWA,OACZa,EAAa3B,KAAKuB,aACxB,OACE,gCACE,2CACA,cAAC,EAAD,CAAaxB,WAAYC,KAAKmB,eAC9B,0CACCD,EAASU,QAAU,GAAK,cAAC,EAAD,CAAQlC,MAAOoB,EAAQD,aAAcb,KAAKa,eACnE,6BACGc,EAAWE,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAyBT,KAAMS,GAAbA,EAAGjC,gB,GAnCPoB,aCMlBuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.799ea78c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { v4 as uuid4 } from \"uuid\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n  id: \"\",\r\n};\r\nexport default class ContactForm extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({\r\n      id: uuid4(),\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const { name } = this.state;\r\n    // console.log(`      name: ${name}    `);\r\n    this.props.addContact({ ...this.state });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <div>\r\n        <form action=\"\" onSubmit={this.handleSubmit}>\r\n          <label htmlFor=\"name\"> Name</label>\r\n          <input type=\"text\" name=\"name\" value={name} placeholder=\"name\" onChange={this.handleChange} />\r\n\r\n          <label htmlFor=\"number\"> Number</label>\r\n          <input type=\"tel\" name=\"number\" value={number} placeholder=\"number\" onChange={this.handleChange} />\r\n\r\n          <input type=\"submit\" value=\"Add contuct\" />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\n// import PropTypes from 'prop-types'\n\nexport default class ContactList extends Component {\n  // static propTypes = {\n  //   prop: PropTypes\n  // }\n  render() {\n    console.log(this.props.list);\n    return (\n      <>\n        <li>\n          {this.props.list.name}:{this.props.list.number}\n        </li>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n// import PropTypes from 'prop-types'\nconst Filter = function ({ filterRender, filter }) {\n  return (\n    <div>\n      <label>Find contacts by name</label>\n      <input type=\"text\" value={filter} onChange={(e) => filterRender(e.target.value)} />\n    </div>\n  );\n};\nexport default Filter;\n","import React, { Component } from \"react\";\nimport ContactForm from \"../src/components/ContactForm/ContactForm\";\nimport ContactList from \"../src/components/ContactList/ContactList\";\nimport Filter from \"../src/components/Filter/Filter\";\n// import PropTypes from 'prop-types'\nconst contactList = [];\nexport default class App extends Component {\n  // static propTypes = {\n  //   prop: PropTypes\n  // }\n  state = {\n    contacts: [...contactList],\n    filter: \"\",\n  };\n  toAddContact = (el) => {\n    this.setState((prev) => {\n      const updateState = [...prev.contacts, el];\n      console.log({ contacts: updateState });\n      return { contacts: updateState };\n    });\n  };\n  filterRender = (filter) => {\n    this.setState({ filter });\n  };\n  filterTask = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n  render() {\n    const { contacts, filter } = this.state;\n    const filterText = this.filterTask();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm addContact={this.toAddContact} />\n        <h2>Contacts</h2>\n        {contacts.length >= 1 && <Filter value={filter} filterRender={this.filterRender} />}\n        <ul>\n          {filterText.map((el) => {\n            return <ContactList key={el.id} list={el} />;\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}